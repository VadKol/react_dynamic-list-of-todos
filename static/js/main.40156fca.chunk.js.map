{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterStatus","TodoList","todos","selectedTodo","setSelectedTodo","length","className","map","todo","id","title","completed","isTodoSelected","classNames","type","onClick","TodoFilter","filterStatus","setFilterStatus","filterQuery","setFilterQuery","filterByOption","Object","entries","value","onChange","event","target","label","placeholder","trim","replace","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","useState","user","setUser","isLoading","setIsLoading","hasError","setHasError","loadUser","a","userFromServer","useEffect","color","href","email","name","App","setTodos","All","getTodosFromServer","todosFromServer","visibleTodos","filter","lowerCasedTitle","toLowerCase","lowerCasedQuery","Active","Completed","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40156fca.chunk.js","sourcesContent":["export enum FilterStatus {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  if (!todos.length) {\n    return (\n      <h2>No todos found</h2>\n    );\n  }\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const { id, title, completed } = todo;\n          const isTodoSelected = selectedTodo?.id === id;\n          const handleClick = () => setSelectedTodo(todo);\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light': isTodoSelected,\n              })}\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span\n                    className=\"icon\"\n                    data-cy=\"iconCompleted\"\n                  >\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-danger': !completed,\n                    'has-text-success': completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={handleClick}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('far', {\n                      'fa-eye': !isTodoSelected,\n                      'fa-eye-slash': isTodoSelected,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FC } from 'react';\n\nimport { FilterStatus } from '../../types/Filter';\n\ntype Props = {\n  filterStatus: FilterStatus,\n  setFilterStatus: (status: FilterStatus) => void,\n  filterQuery: string,\n  setFilterQuery: (query: string) => void,\n};\n\nexport const TodoFilter: FC<Props> = ({\n  filterStatus,\n  setFilterStatus,\n  filterQuery,\n  setFilterQuery,\n}) => {\n  const filterByOption = Object.entries(FilterStatus);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterStatus}\n            onChange={(event) => setFilterStatus(\n              event.target.value as FilterStatus,\n            )}\n          >\n            {filterByOption.map(([label, value]) => {\n              return (\n                <option\n                  value={value}\n                  key={value}\n                >\n                  {label}\n                </option>\n              );\n            })}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filterQuery}\n          onChange={(event) => (\n            setFilterQuery(event.target.value.trim().replace(/\\s+/g, ' '))\n          )}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {filterQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              aria-label=\"Delete\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setFilterQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo,\n  setSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const loadUser = async () => {\n    try {\n      const userFromServer = await getUser(userId);\n\n      setUser(userFromServer);\n    } catch {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && (\n        <Loader />\n      )}\n\n      {!isLoading && !hasError && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo # ${id}`}\n            </div>\n\n            <button\n              aria-label=\"Delete\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            {hasError && (\n              <h2 style={{ color: 'red' }}>\n                An error found while loading user info\n              </h2>\n            )}\n\n            {user && (\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong\n                  className={classNames({\n                    'has-text-success': completed,\n                    'has-text-danger': !completed,\n                  })}\n                >\n                  {\n                    completed\n                      ? 'Done'\n                      : 'Planned'\n                  }\n                </strong>\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\n\nimport { Todo } from './types/Todo';\nimport { FilterStatus } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterStatus, setFilterStatus] = useState(FilterStatus.All);\n  const [filterQuery, setFilterQuery] = useState('');\n\n  const getTodosFromServer = async () => {\n    try {\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n    } catch {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  const visibleTodos = todos.filter(todo => {\n    const lowerCasedTitle = todo.title.toLowerCase();\n    const lowerCasedQuery = filterQuery.toLowerCase();\n\n    if (filterStatus === FilterStatus.Active && todo.completed) {\n      return false;\n    }\n\n    if (filterStatus === FilterStatus.Completed && !todo.completed) {\n      return false;\n    }\n\n    return lowerCasedTitle.includes(lowerCasedQuery);\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterStatus={filterStatus}\n                setFilterStatus={setFilterStatus}\n                filterQuery={filterQuery}\n                setFilterQuery={setFilterQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {hasError && (\n                <h2 style={{ color: 'red' }}>\n                  An error found while loading todos\n                </h2>\n              )}\n\n              {isLoading && (\n                <Loader />\n              )}\n\n              {!hasError && !isLoading && (\n                <TodoList\n                  todos={visibleTodos}\n                  setSelectedTodo={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}